# Global TFE Configuration
tfe_hostname     = "app.terraform.io"
# tfe_token      = "YOUR_TFE_TOKEN" # Never store sensitive values in version control
tfe_organization = "your-organization-name"

# Admin Team Configuration
admin_team = {
  name        = "platform-admins"
  description = "Team responsible for managing TFE platform"
  admins      = ["admin1@example.com", "admin2@example.com"]
  members     = ["member1@example.com", "member2@example.com"]
}

# Teams to be onboarded
teams = {
  "engineering" = {
    name        = "engineering"
    description = "Engineering team workspaces"
    email       = "engineering@example.com"
    cost_code   = "CC-ENG-123"
    platforms   = ["vsphere", "aws"]
    environments = ["dev", "preprod", "prod"]
    admins      = ["lead@example.com"]
    members     = ["dev1@example.com", "dev2@example.com"]
    # Team-specific AWS configuration per environment
    aws_config = {
      dev = {
        region      = "ap-southeast-2"
        account_id  = "111111111111"
        vpc_id      = "vpc-dev111111111111"
        subnet_ids  = ["subnet-dev1111111", "subnet-dev2222222"]
      },
      preprod = {
        region      = "ap-southeast-2"
        account_id  = "222222222222"
        vpc_id      = "vpc-preprod22222222"
        subnet_ids  = ["subnet-preprod1111", "subnet-preprod2222"]
      },
      prod = {
        region      = "ap-southeast-2"
        account_id  = "333333333333"
        vpc_id      = "vpc-prod3333333333"
        subnet_ids  = ["subnet-prod1111111", "subnet-prod2222222"]
      }
    },
    # Team-specific Azure configuration per environment
    azure_config = {
      dev = {
        subscription_id = "00000000-0000-0000-0000-000000000001"
        resource_group  = "engineering-dev-rg"
        location        = "australiaeast"
      },
      preprod = {
        subscription_id = "00000000-0000-0000-0000-000000000002"
        resource_group  = "engineering-preprod-rg"
        location        = "australiaeast"
      },
      prod = {
        subscription_id = "00000000-0000-0000-0000-000000000003"
        resource_group  = "engineering-prod-rg"
        location        = "australiaeast"
      }
    },
    # Team-specific vSphere configuration per environment
    vsphere_config = {
      dev = {
        datacenter  = "dc-01"
        cluster     = "cluster-dev"
        datastore   = "datastore-dev"
        network     = "network-dev"
        folder_path = "/vm/terraform-managed/engineering/dev"
      },
      preprod = {
        datacenter  = "dc-01" 
        cluster     = "cluster-preprod"
        datastore   = "datastore-preprod"
        network     = "network-preprod"
        folder_path = "/vm/terraform-managed/engineering/preprod"
      },
      prod = {
        datacenter  = "dc-02"  # Production might be in a different datacenter
        cluster     = "cluster-prod"
        datastore   = "datastore-prod"
        network     = "network-prod"
        folder_path = "/vm/terraform-managed/engineering/prod"
      }
    }
  },
  "finance" = {
    name        = "finance"
    description = "Finance team workspaces"
    email       = "finance@example.com"
    cost_code   = "CC-FIN-456"
    platforms   = ["azure"]
    environments = ["dev", "prod"] # This team only needs dev and prod
    admins      = ["finance-lead@example.com"]
    members     = ["finance-user1@example.com", "finance-user2@example.com"]
    # Team-specific AWS configuration - empty since this team doesn't use AWS
    aws_config = null,
    # Finance team uses only Azure with environment-specific configurations
    azure_config = {
      dev = {
        subscription_id = "00000000-0000-0000-0000-000000000004"
        resource_group  = "finance-dev-rg"
        location        = "australiaeast"
      },
      prod = {
        subscription_id = "00000000-0000-0000-0000-000000000005"
        resource_group  = "finance-prod-rg"
        location        = "australiaeast"
      }
    },
    vsphere_config = null
  }
}

# Global Platform Configuration
# Base platform configs - minimal settings defining defaults only

aws_config = {
  enabled     = true
  region      = "ap-southeast-2" # Sydney region as the global default
  # Other fields are removed as they should be specified per team/environment
}

azure_config = {
  enabled         = true
  location        = "australiaeast" # Default location for Azure resources
  # Other fields removed as they should be specified per team/environment
}

vsphere_config = {
  enabled     = true
  datacenter  = "dc-01" # Default datacenter
  # Other fields removed as they should be specified per team/environment
}

# Custom Environment Configurations (optional, defaults will be used if not specified)
environment_configs = {
  dev = {
    auto_apply                = true
    terraform_version         = "1.6.0"
    execution_mode            = "remote"
    terraform_working_dir     = ""
    speculative_enabled       = true
    allow_destroy_plan        = true
    file_triggers_enabled     = true
    trigger_prefixes          = []
    queue_all_runs            = false
    assessments_enabled       = false
    global_remote_state       = false
    run_operation_timeout     = 30
    workspace_name_prefix     = "dev-"
  },
  preprod = {
    auto_apply                = false
    terraform_version         = "1.6.0"
    execution_mode            = "remote"
    terraform_working_dir     = ""
    speculative_enabled       = true
    allow_destroy_plan        = false
    file_triggers_enabled     = true
    trigger_prefixes          = []
    queue_all_runs            = true
    assessments_enabled       = true
    global_remote_state       = true
    run_operation_timeout     = 60
    workspace_name_prefix     = "preprod-"
  },
  prod = {
    auto_apply                = false
    terraform_version         = "1.6.0"
    execution_mode            = "remote"
    terraform_working_dir     = ""
    speculative_enabled       = true
    allow_destroy_plan        = false
    file_triggers_enabled     = true
    trigger_prefixes          = []
    queue_all_runs            = true
    assessments_enabled       = true
    global_remote_state       = true
    run_operation_timeout     = 120
    workspace_name_prefix     = "prod-"
  }
}

###################################################
# SSO Integration Configuration
###################################################

# Enable team management via SAML assertions
enable_sso_team_management = true

# SAML attribute containing team membership information
sso_team_membership_attribute = "MemberOf"

# SSO Provider Configuration (choose one)
sso_configuration = {
  # Standard Keycloak Configuration
  provider_type = "keycloak"
  keycloak_metadata_url = "https://keycloak.example.com/auth/realms/master/protocol/saml/descriptor"
  keycloak_client_id = "terraform-enterprise"
  keycloak_realm = "master"
  
  # Uncomment for Red Hat build of Keycloak Configuration
  # provider_type = "keycloak_redhat"
  # keycloak_redhat_metadata_url = "https://sso.example.com/auth/realms/master/protocol/saml/descriptor"
  # keycloak_redhat_client_id = "terraform-enterprise"
  # keycloak_redhat_realm = "master"
}

# Map Keycloak Roles to TFE teams
sso_team_mappings = {
  admins = {
    name = "Administrators"
    sso_team_id = "a1b2c3d4-e5f6-0000-0000-000000000001"  # Keycloak role ID
  },
  developers = {
    name = "Developers"
    sso_team_id = "a1b2c3d4-e5f6-0000-0000-000000000002"  # Keycloak role ID
  },
  operators = {
    name = "Operators"
    sso_team_id = "a1b2c3d4-e5f6-0000-0000-000000000003"  # Keycloak role ID
  }
} 