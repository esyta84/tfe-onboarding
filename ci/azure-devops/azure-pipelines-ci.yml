trigger:
  branches:
    include:
    - main
    - feature/*
  paths:
    include:
    - '**/*.tf'
    - 'ci/azure-devops/*.yml'

pr:
  branches:
    include:
    - main
  paths:
    include:
    - '**/*.tf'
    - 'ci/azure-devops/*.yml'

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: terraform_version
    value: '1.6.0'
  - name: tfe_hostname
    value: 'app.terraform.io'
  - group: tfe-variables # Variable group containing sensitive values like TFE_TOKEN

stages:
- stage: Validate
  displayName: 'Validate Terraform'
  jobs:
  - job: Validate
    displayName: 'Validate Configuration'
    steps:
    - task: TerraformInstaller@1
      displayName: 'Install Terraform $(terraform_version)'
      inputs:
        terraformVersion: '$(terraform_version)'

    - task: TerraformCLI@1
      displayName: 'terraform fmt check'
      inputs:
        command: 'fmt'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
        commandOptions: '-check -recursive'

    - task: TerraformCLI@1
      displayName: 'terraform init'
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
        backendType: 'azurerm'
        backendServiceArm: 'TFEServiceConnection'
        ensureBackend: true
        backendAzureRmResourceGroupName: 'tfstate'
        backendAzureRmStorageAccountName: 'tfstate$(Build.DefinitionName)'
        backendAzureRmContainerName: 'terraform-state'
        backendAzureRmKey: 'tfe-onboarding.tfstate'

    - task: TerraformCLI@1
      displayName: 'terraform validate'
      inputs:
        command: 'validate'
        workingDirectory: '$(System.DefaultWorkingDirectory)'

- stage: Plan
  displayName: 'Plan Terraform Changes'
  dependsOn: Validate
  jobs:
  - job: Plan
    displayName: 'Generate Terraform Plan'
    steps:
    - task: TerraformInstaller@1
      displayName: 'Install Terraform $(terraform_version)'
      inputs:
        terraformVersion: '$(terraform_version)'

    - task: TerraformCLI@1
      displayName: 'terraform init'
      inputs:
        command: 'init'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
        backendType: 'azurerm'
        backendServiceArm: 'TFEServiceConnection'
        ensureBackend: true
        backendAzureRmResourceGroupName: 'tfstate'
        backendAzureRmStorageAccountName: 'tfstate$(Build.DefinitionName)'
        backendAzureRmContainerName: 'terraform-state'
        backendAzureRmKey: 'tfe-onboarding.tfstate'

    - task: TerraformCLI@1
      displayName: 'terraform plan'
      inputs:
        command: 'plan'
        workingDirectory: '$(System.DefaultWorkingDirectory)'
        environmentServiceNameAzureRM: 'TFEServiceConnection'
        publishPlanResults: 'TerraformPlan'
        commandOptions: '-var "tfe_hostname=$(tfe_hostname)" -var "tfe_token=$(tfe_token)" -var "tfe_organization=$(tfe_organization)" -out=$(Build.ArtifactStagingDirectory)/terraform.tfplan'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Terraform Plan'
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'terraform-plan' 